<?php

namespace Com\Nairus\ResumeBundle\Entity;

use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-08-11 at 16:48:12.
 */
class ResumeSkillTest extends KernelTestCase
{

    /**
     * @var ResumeSkill
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ResumeSkill;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::setRank
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::getRank
     */
    public function testGetAndSetRank()
    {
        try {
            $this->object->setRank(1);
            $this->assertSame(1, $this->object->getRank());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levé: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::setRank
     *
     * @expectedException \TypeError
     */
    public function testSetRankWithNullParam()
    {
        $this->object->setRank(null);
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::setResume
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::getResume
     */
    public function testGetAndSetResume()
    {
        try {
            $resume = new Resume();
            $this->object->setResume($resume);
            $this->assertSame($resume, $this->object->getResume());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levé: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }
    /**
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::setSkill
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::getSkill
     */
    public function testGetAndSetSkill()
    {
        try {
            $skill = new Skill();
            $this->object->setSkill($skill);
            $this->assertSame($skill, $this->object->getSkill());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levé: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::setSkillLevel
     * @covers Com\Nairus\ResumeBundle\Entity\ResumeSkill::getSkillLevel
     */
    public function testGetAndSetSkillLevel()
    {
        try {
            $skillLevel = new SkillLevel();
            $this->object->setSkillLevel($skillLevel);
            $this->assertSame($skillLevel, $this->object->getSkillLevel());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levé: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

}
