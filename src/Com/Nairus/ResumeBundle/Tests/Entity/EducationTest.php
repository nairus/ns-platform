<?php

namespace Com\Nairus\ResumeBundle\Entity;

use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-08-11 at 16:47:33.
 */
class EducationTest extends KernelTestCase
{

    /**
     * @var Education
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Education();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setInstitution
     * @covers Com\Nairus\ResumeBundle\Entity\Education::getInstitution
     */
    public function testGetAndSetInstitution()
    {
        try {
            $this->object->setInstitution("AFPA");
            $this->assertSame("AFPA", $this->object->getInstitution());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levée :" . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setInstitution
     *
     * @expectedException \TypeError
     */
    public function testSetInstitutionWithNullParam()
    {
        $this->object->setInstitution(null);
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setDiploma
     * @covers Com\Nairus\ResumeBundle\Entity\Education::getDiploma
     */
    public function testGetAndSetDiploma()
    {
        try {
            $this->object->setDiploma("BTS");
            $this->assertSame("BTS", $this->object->getDiploma());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levée: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setDiploma
     *
     * @expectedException \TypeError
     */
    public function testSetDiplomaWithNullParam()
    {
        $this->object->setDiploma(null);
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setDomain
     * @covers Com\Nairus\ResumeBundle\Entity\Education::getDomain
     */
    public function testGetAndSetDomain()
    {
        try {
            $this->object->setDomain("Web");
            $this->assertSame("Web", $this->object->getDomain());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levée: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setDomain
     *
     * @expectedException \TypeError
     */
    public function testSetDomainWithNullParam()
    {
        $this->object->setDomain(null);
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setStartYear
     * @covers Com\Nairus\ResumeBundle\Entity\Education::getStartYear
     */
    public function testGetAndSetStartYear()
    {
        try {
            $this->object->setStartYear(2017);
            $this->assertSame(2017, $this->object->getStartYear());

            // Tests PHP 7 : typecating int
            $this->object->setStartYear(true); // typecasting en (int)1
            $this->object->setStartYear(false); // typecasting en (int)0
            $this->object->setStartYear("42"); // typecasting en (int)42
            $this->object->setStartYear(1.5); // typecasting en (int)1
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levée: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setStartYear
     *
     * @expectedException \TypeError
     */
    public function testSetStartYearWithNullParam()
    {
        $this->object->setStartYear(null);
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setEndYear
     * @covers Com\Nairus\ResumeBundle\Entity\Education::getEndYear
     */
    public function testGetAndSetEndYear()
    {
        try {
            $this->object->setEndYear(2018);
            $this->assertSame(2018, $this->object->getEndYear());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levée: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setEndYear
     *
     * @expectedException \TypeError
     */
    public function testSetEndYearWithNullParam()
    {
        $this->object->setEndYear(null);
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setDescription
     * @covers Com\Nairus\ResumeBundle\Entity\Education::getDescription
     */
    public function testGetAndSetDescription()
    {
        try {
            $desc = "Lorem ipsum ...";
            $this->object->setDescription($desc);
            $this->assertSame($desc, $this->object->getDescription());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levée: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setDescription
     *
     * @expectedException \TypeError
     */
    public function testSetDescriptionWithNullParam()
    {
        $this->object->setDescription(null);
    }

    /**
     * @covers Com\Nairus\ResumeBundle\Entity\Education::setResume
     * @covers Com\Nairus\ResumeBundle\Entity\Education::getResume
     * @todo   Implement testSetResume().
     */
    public function testGetAndSetResume()
    {
        try {
            $resume = new Resume();
            $this->object->setResume($resume);
            $this->assertSame($resume, $this->object->getResume());
        } catch (\Exception $exc) {
            $this->fail("Aucune exception ne doit être levée: " . $exc->getMessage());
        } catch (\Error $err) {
            $this->fail("Aucune erreur ne doit être levée :" . $err->getMessage());
        }
    }

}
